API: A set of rules and definitions that specifies how different software systems interact.
REST API: Representational State Transfer is an API that follows the REST style. 
JSON: A lightweight data-interchange format, easy to read and write for humans and machines.
Callback: A function passed as an argument to another function, to be executed after an operation.
Domain name system: DNS, A service that acts as a lookup, translating a domain into an actual IP addess.
HTTP request method: Also called an HTTP verb, a method that indicates the desired action (such as deleting a resource) to be taken on a given resource.
Header: information included on the request and response, which generally contains metadata such as authorization information, cookies, and when the request happened.
request body: Information that is sent on a request that isn't included in the URL.
Response body: information that is sent back from the server.
status code: the part of the response that gives a quick indication as to how the request went.
npm: (short for Node Package Manager) is the default package manager for the Node.js runtime enviorment.
Axios: is a popular, lightweight, and promise-based HTTP client for Javascript. It's most commonly used in the context of web applications to make HTTP requests from the browser of from a node.ja enviorment.
Node.js: is a popular open-source, cross-platform JavaScript runtime enviornment. Instead of running JavaScript code in a browser, Node.js allows you to run JavaScript on the server (or on your local machine) (server-side scripting) just like you'd run programs in other languages.
Promise: is an objest that represents the eventual completion or failure of an asynchronous operation, as well as its resulting value. 
Event loop: a design pattern that a program may use to prioritize certain lines of code for execution.
Synchronous code: Code that runs one line after another in the order the lines were provided.
Asynchronous code: Code that executes multiple instructions simultaneously, and the order in which the instructions complete isn't known. 
Fetch API: modern, built-in JavaScript interface for making HTTP requests. It provide a cleaner, promise-based syntax to replace or supplement the older XMLHttpRequest (XHR) approach.
JavaScript Syntax Expression: Known as JSX, JavaScript Syntax Expression allows developers to write HTML-like syntax in JavaScript files.
React fragment: Syntax that lets you add multiple elements to a React component without wrapping them in an extra DOM node.
Named export: A value exported from a file that already has a given name associated with it.
Default export: 
The default value of a file when it is imported.
JSX: JSX is an HTML-like syntax for defining user interface elements right inside your React code.
Functional component: A JavaScript function that returns JSX.
Prop: An input passed into a React component as an object.
Conditional rendering: Using conditional statements to either display or not display content.
Key: A special property that is added to repeating elements such as list items; each value for the key property must be unique across the list.
Project generator: 
An application or script that creates a template project for you. Project generators make it easier for developers to get started when working with a complex framework.
CSS framework: A library of various web design components that can be applied to multiple projects.
Jest: A popular and powerful Javascript testing framework.
Smoke test: A test that verifies that a component can render without throwing an error.
State: Data that affects how an application behaves and is rendered.
Hook: A special React function that gives you access to some React process.
One-way data flow: Also called one-way binding, the idea that changes in the props or state will cascade downward to cause changes further on.
Integration tests: Automated tests that check if the individual components of a React application work properly when combined.
Race condition: Also called a race hazard, a condition where a program depends on the relative timing of one or more processes to function correctly.
Lifting up state: The process of moving state higher up in a component tree, enabling state to be passed from a parent component to multiple children.
Controlled component: A form element whose value is managed in React state. Re-render: When a part of the page, such as a component, is created from scratch. In React when components re-render, what is presented to the user may change based on the current state or props that the component has access to.
Side effect: Anything in a function or expression that affects something outside the scope of the function or expression.
Effect hook: A hook that lets you perform side effects from a React function component.
Race conditions: When two or more events try to execute at the same time, causing the system to be unstable and vulnerable to an attack.
Cleanup function: A function that cleans up after previously applied effects to undo an effect for cases like pending API responses.
Backend routing: Routing in which every page sends a request to the server for an HTML file, and every page requires the browser to download, parse, and render a new HTML file.
Frontend routing: Routing that is handled from the browser, and the browser only sends a request to the server when necessary.
Routing: The process of keeping the browser URL in sync with what's displayed on the page.
URL parameter: Also called a param, the part of a URL that is variable and that web applications need to extract.
Parameter token: The named part of a path that can change values but fits a particular pattern. Often the parameter token provides access to identifying information such as an ID.
Programmatic navigation: Navigation that causes a user to be redirected as a result of an event—such as logging in or saving—that occurs on a route.
Nested route: Also called a child route, a route that is displayed inside of another route.
Deployment: The process of making a website available for users on the internet.
Environment: virtual space with a specific configuration where an application runs.
Developer operations: Abbreviated as DevOps, a methodology that focuses on the operations, such as deployment, of a software development team.
Continuous integration: The process of building, testing, and merging application code in a shared repository.
Component tree: A term that refers to all JSX elements and components under a specific root.
Prop drilling: The process of accessing props from a parent component by passing it through multiple other components.
Context provider: A wrapping component that provides all components within the provider's component tree with access to specific values.
Custom context provider: A component that returns a context provider with access to state variables and functions.
Web framework: Tools and software that help developers build web applications more easily.
Express: A minimalist web framework for Node.js.
localhost: A special domain that's available for applications running on your computer. 
Middleware: A function that can intercept actions after they are dispatched but before they reach the store's reducers. Some common tasks a middleware may perform include logging the action, routing, or making API calls for data.
Middleware pipeline: A series of middleware functions.
Query string: Text that comes at the end of a URL following a question mark (?).
Query parameter: Key-value pair in a query string, where the key and the value are strings separated by an equal sign (=).
Router-level middleware: Middleware functions for specific routes.
Middleware: A function that an Express server runs between receiving a request and responding to that request.
Abstraction: The extraction of a pattern that's then put into a function.
Representational state transfer: REST, a set of constraints for building web APIs.
RESTful API: A web API that adheres to the constraints of REST.
HTTP request method: Also called an HTTP verb, a method that indicates the desired action (such as deleting a resource) to be taken on a given resource.
API endpoint: A location where a client can send a request to retrieve a resource that exists on the server.
HTTP response status code: A code sent along with every HTTP response from the server, indicating the server's response to the client.
Error handler: A function that returns status codes and error information to the client.
Group-by-resource structure: A file organization structure in which any code that handles requests to a resource is stored in a folder with the same name as the resource, regardless of the URL to that resource.
Controller file: A file that defines and exports the route handler functions and is responsible for managing the state of a single resource in an API.
Express router: A modular middleware and routing system that can be attached to an Express app.
BSON: A binary representation of JSON that is only readable by machine but allows for faster queries.
Collection: A grouping of MongoDB documents.
BSON document: A set of field-and-value pairs where MongoDB stores data.
CRUD: An acronym that stands for Create, Read, Update, and Delete.
Operators: Reserved keywords in MongoDB that start with the $ symbol that allow you to build more flexible queries and update your data.
Hosted database: Also called a managed database, a cloud-computing service in which the end user pays a cloud service provider for access to a database.
Instance: A specific installation of a SQL server.
sudo delete database development: Known as SQL, a computer language designed for managing data stored in relational databases.
Schema: A container, similar to a folder on your hard drive, that holds named objects; one database can contain multiple schemas.
Relational database: A type of database in which the relationships between the data points matter, and that requires a programming language to pull desired data.
Relational database management system: Also known as RDBMS, a class of programs that can be used to create, update, and administer a relational database.
Primary key: A field that uniquely identifies the records in a table.
Field: A container that stores data in a table.
Data definition language: DDL, a subset of SQL commands used to define the tables in the database.
Query: A statement used to retrieve data from a table.
One-to-one relationship: A relationship where a single record in one table is related to a single record in another table, and neither column has duplicate records.
One-to-many relationship: A relationship where a single record in one table is related to multiple records in another table.
Many-to-many relationship: A relationship where multiple records in one table are related to multiple records in another table.
Entity relationship diagram: Known as ERD, a diagram that lets database designers visualize the tables and the relationships between the tables in a database.
Composite key: A primary key created from combining multiple columns to guarantee the uniqueness of a record.
Join: A clause that combines two or more tables that are linked by a shared column.
Alias: A temporary name that you can use to represent a column or table.
Left join: A left join includes all rows on the left side of a join, regardless of whether it matches a row on the right, and returns NULL values for any unmatched columns.
Right join: A right join includes all rows on the right side of a join, regardless of whether it matches a row on the left, and returns NULL values for any unmatched columns.
Full join: A full join collates the results of both left join and right join operations and returns all rows when there is a match in the left table or right table records.
Knex: A SQL query builder library that you can use with different types of databases to build complex SQL queries using JavaScript.
knexfile: A file that contains database configurations for different environments.
Migrations: Like a version-control file for your database that lets you easily modify and share the application's database schema with your coworkers.
Environment variable: Also called an env var, a key-value pair held by your current operating system and user.
dotenv: A package that injects environment variables into the appropriate environment.
Seed files: Files that let you populate your database with test or seed data independent of your migration files.
Service: Plain JavaScript designed to group together related functions as a service to the rest of your application.
Request-response cycle: The path that information takes from the client to the server and then back to the client.
Three-tier architecture: A way of building a web application in three separate pieces: the frontend, the backend, and the database.
Presentation tier: The frontend tier in a three-tier architecture, which consists of the user interface.
Application tier: The backend tier in a three-tier architecture, which contains the functional business logic that drives an application's core capabilities.
Data tier: The database tier in a three-tier architecture, which consists of a database.
Same-origin policy: A policy in which a web browser allows scripts contained in one web page to access data at a different URL, as long as the web page and URL have the same origin.
Cross-site request forgery: Abbreviated as CSRF, an attack that convinces the victim to submit a malicious request.
Cross-origin resource sharing: Abbreviated as CORS, a mechanism that allows a web page from one origin to access a resource at different origin.
Cookie: A small piece of data stored on the user's computer by the web browser that provides a way for websites to remember stateful information.
Inside-out development flow: A full-stack workflow that involves making changes starting with the backend, and fully implementing the feature for the current layer before making any changes to the layer above it.
Outside-in development flow: A full-stack workflow that involves making changes starting with the frontend, fully implementing a small part of the feature through each layer of the architecture.
Log levels: A way to indicate the severity of various log messages.
Pretty printing: Reformatting text into a structure that is easier for people to read than the original format.
Trace-level logging: A logging level that aims to capture as much information as possible.
Debug-level logging: A logging level that aims to capture just enough information to debug a problem.
Info-level logging: A logging level that aims to capture the significant events in your application, such as the status code of a request or new database record created.
Prompt templates: Predefined patterns or structures that help guide the creation of text.
Chain: A sequence of tasks or operations that are performed in order.
Memory: A system where important information from previous interactions or conversations is stored and can be used to provide context and improve future responses.
Python: A high-level, interpreted, and general-purpose programming language.
Kanban: A system or technique of grouping tasks into cards which are then organized according to their current state.
Algorithm: A well-defined sequence of steps for solving a computational problem.
Time complexity of an algorithm: The number of instructions (or steps) needed to execute the algorithm.
Space complexity of an algorithm: The amount of memory used by the algorithm.
Rate of growth: Also called the order of growth, the rate at which the running time of an algorithm increases as a function of the input size.
Big O notation: A notation commonly used to describe the order of growth of an algorithm.
Auxiliary space: The temporary or extra space used by the algorithm while it is being executed.
Applicant tracking systems: Also known as ATS, software applications that electronically scan your resume for certain keywords and phrases to see if you're a match for a specific job listing.
Searching algorithms: Algorithms that iterate through data to retrieve specific data.
Sorting algorithms: Algorithms that bring order to data, making it easier to search, display, and understand the data.
Linear search algorithm: Also known as the sequential search algorithm, an algorithm that checks every element in an array, starting from the leftmost element, and continues until the desired element is found.
Brute-force algorithm: Any algorithm that doesn't use any logic to try to do its job quickly or somehow reduce the number of elements that it searches for a matching value.
Binary search algorithm: Also known as a half-interval search algorithm, an algorithm to find a specific element located in a sorted array.
Recursion: A problem-solving method that involves a function calling itself.
Top-down recursive function: A function that calculates the solutions to each subproblem in the forward phase, passing the results of the calculation to the recursive call.
Bottom-up recursive function: A function that breaks down the problem into increasingly smaller problems until the base case is encountered, and then combines the solutions in the backward phase.
Stack overflow error: A runtime error where the call stack gets too big and runs out of space.
Forward phase: Also called the recursive phase, the phase that happens when the function is calling itself and continues until the base case is satisfied.
Backward phase: Also called the back-out phase, the phase that starts when a function call satisfies the base case, then returns a value to the function that called it, and continues until a value is returned to the initial function call.
Bubble sort algorithm: Also called sinking sort, a comparison sorting algorithm that repeatedly steps through the elements in an array, compares two adjacent elements, and swaps them if they are in the wrong order.
Merge sort algorithm: A divide-and-conquer algorithm that continuously splits arrays in half until every element is alone in its own array, then merges each subarray in order.
Quicksort algorithm: Also called a partition exchange sort, an algorithm that works by partitioning an array into two parts, then sorting the parts independently.
Runtime complexity: The algorithmic efficiency as the size of the input grows larger.
Space complexity: The storage space that the algorithm requires.
Stability: Whether or not a sort preserves the order of elements with equal values.
Data structure: A way to organize data in a computer's memory, facilitating efficient access to and modification of the data.
Set: A collection of unique values.
Map: A collection of key-value pairs that remembers the insertion order of the keys.
Class: A blueprint for creating objects which makes it easy to create multiple objects that all have similar properties.
Object-oriented programming: OOP, a programming paradigm where data is stored into objects as individual fields, attributes, or parameters, which the code manipulates through different procedures and methods.
Class instance: An object built to the specifications of a given class.
Constructor: A special function that defines how a new instance of a class is created.
Method: Any function that can be called from another object.
Linked list: An ordered, linear data structure in which each item contains a reference to the next item.
Head: A reference to the first node in a linked list.
Tail: The last node in a linked list.
Singly linked list: A linked list in which each node contains exactly one reference to the next node.
Doubly linked list: A linked list in which each node contains two references: a reference to the next node and a reference to the previous node.
Circular linked list: A linked list in which the last node points to the first node or another node before it, thereby forming a loop.
Event loop: A design pattern that a program may use to prioritize certain lines of code for execution.
Stack: A vertical data structure that stores elements in a last in, first out order.
Queue: A horizontal data structure that stores data in a first in, first out order.
Tree structure: A type of structure that includes a single root and multiple levels of organization.
Root node: A special node with no parent, from which all other nodes descend.
Leaf node: A node without any children.
Binary tree: A tree with an additional limitation: each node can only have zero, one, or two children (at most).
Subtree: A mini tree within a binary tree, whose root can be any node and all of its descendants rooted at that node.
Balanced tree: A tree in which each row contains two times as many nodes as the row before.
Depth-first search: DFS, a tree-traversal algorithm that starts from the root node, explores as far as possible in a subtree, and then backtracks before moving to the next subtree.
In-order traversal: Traversal in which the left branch of the node is visited, then the current node is handled, and then the right branch is visited.
Pre-order traversal: Traversal in which the current node is handled first, then the left branch of the node is visited, and then the right branch is visited.
Post-order traversal: Traversal in which the left branch of the node is visited, then the right branch is visited, and then the current node is handled last.