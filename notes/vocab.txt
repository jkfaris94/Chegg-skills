API: A set of rules and definitions that specifies how different software systems interact.
REST API: Representational State Transfer is an API that follows the REST style. 
JSON: A lightweight data-interchange format, easy to read and write for humans and machines.
Callback: A function passed as an argument to another function, to be executed after an operation.
Domain name system: DNS, A service that acts as a lookup, translating a domain into an actual IP addess.
HTTP request method: Also called an HTTP verb, a method that indicates the desired action (such as deleting a resource) to be taken on a given resource.
Header: information included on the request and response, which generally contains metadata such as authorization information, cookies, and when the request happened.
request body: Information that is sent on a request that isn't included in the URL.
Response body: information that is sent back from the server.
status code: the part of the response that gives a quick indication as to how the request went.
npm: (short for Node Package Manager) is the default package manager for the Node.js runtime enviorment.
Axios: is a popular, lightweight, and promise-based HTTP client for Javascript. It's most commonly used in the context of web applications to make HTTP requests from the browser of from a node.ja enviorment.
Node.js: is a popular open-source, cross-platform JavaScript runtime enviornment. Instead of running JavaScript code in a browser, Node.js allows you to run JavaScript on the server (or on your local machine) (server-side scripting) just like you'd run programs in other languages.
Promise: is an objest that represents the eventual completion or failure of an asynchronous operation, as well as its resulting value. 
Event loop: a design pattern that a program may use to prioritize certain lines of code for execution.
Synchronous code: Code that runs one line after another in the order the lines were provided.
Asynchronous code: Code that executes multiple instructions simultaneously, and the order in which the instructions complete isn't known. 
Fetch API: modern, built-in JavaScript interface for making HTTP requests. It provide a cleaner, promise-based syntax to replace or supplement the older XMLHttpRequest (XHR) approach.
JavaScript Syntax Expression: Known as JSX, JavaScript Syntax Expression allows developers to write HTML-like syntax in JavaScript files.
React fragment: Syntax that lets you add multiple elements to a React component without wrapping them in an extra DOM node.
Named export: A value exported from a file that already has a given name associated with it.
Default export: 
The default value of a file when it is imported.
JSX: JSX is an HTML-like syntax for defining user interface elements right inside your React code.
Functional component: A JavaScript function that returns JSX.
Prop: An input passed into a React component as an object.
Conditional rendering: Using conditional statements to either display or not display content.
Key: A special property that is added to repeating elements such as list items; each value for the key property must be unique across the list.
Project generator: 
An application or script that creates a template project for you. Project generators make it easier for developers to get started when working with a complex framework.
CSS framework: A library of various web design components that can be applied to multiple projects.
Jest: A popular and powerful Javascript testing framework.
Smoke test: A test that verifies that a component can render without throwing an error.
State: Data that affects how an application behaves and is rendered.
Hook: A special React function that gives you access to some React process.
One-way data flow: Also called one-way binding, the idea that changes in the props or state will cascade downward to cause changes further on.
Integration tests: Automated tests that check if the individual components of a React application work properly when combined.
Race condition: Also called a race hazard, a condition where a program depends on the relative timing of one or more processes to function correctly.
Lifting up state: The process of moving state higher up in a component tree, enabling state to be passed from a parent component to multiple children.
Controlled component: A form element whose value is managed in React state. Re-render: When a part of the page, such as a component, is created from scratch. In React when components re-render, what is presented to the user may change based on the current state or props that the component has access to.
Side effect: Anything in a function or expression that affects something outside the scope of the function or expression.
Effect hook: A hook that lets you perform side effects from a React function component.
Race conditions: When two or more events try to execute at the same time, causing the system to be unstable and vulnerable to an attack.
Cleanup function: A function that cleans up after previously applied effects to undo an effect for cases like pending API responses.